forms: the Erlang abstract format, which is a tree-like structure representing parsed Erlang code.

erlang forms vs core erlang

https://www.cs.tcd.ie/~htewari/4D1/erlang/erts-5.1.2/doc/html/absform.html
"This document describes the standard representation of parse trees for Erlang programs as Erlang terms. This representation is known as the abstract format. Functions dealing with such parse trees are compile:forms/[1,2] and functions in the modules epp, erl_eval, erl_lint, erl_pp, erl_parse, and io. They are also used as input and output for parse transforms (see the module compile)."

http://wiki.reia-lang.org/wiki/Roadmap

http://chlorophil.blogspot.com/



http://www.erlang.org/doc/man/erl_id_trans.html
**WARNING** Programmers are strongly advised NOT to engage in parse transformations
"If the option {parse_transform,Module} is passed to the compiler, a user written function parse_transform/2 is called by the compiler before the code is checked for errors."

Lisp Flavored Erlang
http://github.com/rvirding/lfe


Recless
http://code.google.com/p/recless/

http://en.wikibooks.org/wiki/Erlang_Programming/Making_Parsers_with_yecc

erlang modules:
http://www.erlang.org/doc/man/yecc.html
http://www.erlang.org/doc/man/erl_scan.html
http://www.erlang.org/doc/man/erl_parse.html
http://www.erlang.org/doc/man/epp.html
http://www.erlang.org/doc/man/compile.html